npm version 18.15.0

change to php 8.1.0

https://www.youtube.com/watch?v=CnIXzKJqCqs --> to change your php version to >= 8.1.0
if you not change, it cannot be run this project.



to serve

composer install
npm install
#######################################################################################
.env is the main setting file

go to .env file check to make sure database name is the same as "ecommercepro" or you can decide any db name your self

php artisan migrate --> before do this please make sure the data base already created
example: name of database is "ecommercepro"

after finish migrate , copy paste the dummy database to the phpMyadmin



register at stripe account and key in the test public key and secrete key in .env
https://stripe.com/en-my

below are test card for the payment. nothing will be charge from real account

Visa	4242424242424242	Any 3 digits	Any future date
Visa (debit)	4000056655665556	Any 3 digits	Any future date
Mastercard	5555555555554444	Any 3 digits	Any future date
Mastercard (2-series)	2223003122003222	Any 3 digits	Any future date
Mastercard (debit)	5200828282828210	Any 3 digits	Any future date
Mastercard (prepaid)	5105105105105100	Any 3 digits	Any future date
American Express	378282246310005	Any 4 digits	Any future date
American Express	371449635398431	Any 4 digits	Any future date

more can get from here : https://stripe.com/docs/testing

#######################################################################################


npm run dev  --> this to build the dependencies for the project

php artisan serve

test user login : user@gmail.com
test password : 12345678

test admin login : admin@gmail.com
test password : 12345678

-----------------------------------------------------------------------------------------
steps to create and some Laravel notes. notes will have a *mark

create model--> migration and change the schema--> create controller--> create route at web.php -->create view

below are some command in composer to create model, migrations and controller.


php artisan make:model CatagoryName -m   the -m is for migration after model created.

php artisan make:controller ControllerName

php artisan route:list --> to check the route available

the $request in the controller is calling the form's "name=something"

*form require CSRF token to validate and CORS origin to prevent SQL injection

*@if is using in the blade view file to using if logic like in javascript

***************************************************************************************
*@foreach is like for loop in javascript
 @foreach ($data as $data)  --> the data are send by controller as (compact).


the controller get the data from the model connected to the DB.
***************************************************************************************

*@include is like php importing components with <?php include ''>

***************************************************************************************

below are example image upload code
 $image=$request->image;

        if($image)

        {


        $imagename=time().'.'.$image->getClientOriginalExtension();

        $request->image->move('product',$imagename);

         $product->image=$imagename;


        }


***************************************************************************************

  public function show_product()
    {
        $product=product:all(); --> meaning get all product and assign to product variable
        return view('admin.show_product',compact('product'));
    }

